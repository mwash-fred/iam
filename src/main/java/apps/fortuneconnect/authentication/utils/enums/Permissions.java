package apps.fortuneconnect.authentication.utils.enums;

public enum Permissions {
    CUSTOMER_ADD("customer:add"),
    CUSTOMER_MODIFY("customer:modify"),
    CUSTOMER_VERIFY("customer:verify"),
    CUSTOMER_DELETE("customer:delete"),
    CUSTOMER_INQUIRE("customer:inquire"),
    GROUP_ADD("group:add"),
    GROUP_MODIFY("group:modify"),
    GROUP_VERIFY("group:verify"),
    GROUP_DELETE("group:delete"),
    GROUP_INQUIRE("group:inquire"),
    PRODUCT_ADD("product:add"),
    PRODUCT_MODIFY("product:modify"),
    PRODUCT_VERIFY("product:verify"),
    PRODUCT_DELETE("product:delete"),
    PRODUCT_INQUIRE("product:inquire"),
    SCHEME_ADD("scheme:add"),
    SCHEME_MODIFY("scheme:modify"),
    SCHEME_VERIFY("scheme:verify"),
    SCHEME_DELETE("scheme:delete"),
    SCHEME_INQUIRE("scheme:inquire"),
    SOL_ADD("sol:add"),
    SOL_MODIFY("sol:modify"),
    SOL_VERIFY("sol:verify"),
    SOL_DELETE("sol:delete"),
    SOL_INQUIRE("sol:inquire"),
    META_DATA_ADD("meta-data:add"),
    META_DATA_MODIFY("meta-data:modify"),
    META_DATA_VERIFY("meta-data:verify"),
    META_DATA_DELETE("meta-data:delete"),
    META_DATA_INQUIRE("meta-data:inquire"),
    USER_ADD("user:add"),
    USER_MODIFY("user:modify"),
    USER_VERIFY("user:verify"),
    USER_DELETE("user:delete"),
    USER_INQUIRE("user:inquire"),
    TRANSACTION_ADD("transaction:add"),
    TRANSACTION_MODIFY("transaction:modify"),
    TRANSACTION_VERIFY("transaction:verify"),
    TRANSACTION_DELETE("transaction:delete"),
    TRANSACTION_INQUIRE("transaction:inquire"),
    ROLE_ADD("role:add"),
    ROLE_MODIFY("role:modify"),
    ROLE_VERIFY("role:verify"),
    ROLE_DELETE("role:delete"),
    ROLE_INQUIRE("role:inquire"),
    GL_ADD("gl:add"),
    GL_MODIFY("gl:modify"),
    GL_VERIFY("gl:verify"),
    GL_DELETE("gl:delete"),
    GL_INQUIRE("gl:inquire"),
    INTEREST_ADD("interest:add"),
    INTEREST_MODIFY("interest:modify"),
    INTEREST_VERIFY("interest:verify"),
    INTEREST_DELETE("interest:delete"),
    INTEREST_INQUIRE("interest:inquire"),
    PERMISSIONS_INQUIRE("permissions:inquire"),
    OFFICE_ACCOUNT_ADD("office-account:add"),
    OFFICE_ACCOUNT_MODIFY("office-account:modify"),
    OFFICE_ACCOUNT_VERIFY("office-account:verify"),
    OFFICE_ACCOUNT_DELETE("office-account:delete"),
    OFFICE_ACCOUNT_INQUIRE("office-account:inquire"),
    SAVINGS_ACCOUNT_INQUIRE("savings-account:inquire"),
    LOAN_ACCOUNT_ADD("loan-account:add"),
    LOAN_ACCOUNT_MODIFY("loan-account:modify"),
    LOAN_ACCOUNT_CREDIT_ANALYSIS("loan-account:credit-analysis"),
    LOAN_ACCOUNT_BRANCH_APPROVAL("loan-account:branch-approval"),
    LOAN_ACCOUNT_HQ_APPROVAL("loan-account:hq-approval"),
    LOAN_ACCOUNT_CALLBACK("loan-account:callback"),
    LOAN_ACCOUNT_DISBURSE("loan-account:disburse"),
    LOAN_ACCOUNT_DELETE("loan-account:delete"),
    LOAN_ACCOUNT_INQUIRE("loan-account:inquire"),
    REPORT_ACCOUNT_STATEMENT("reports:account-statement"),
    REPORT_ARREARS_BRANCH("reports:arrears-branch"),
    REPORT_ARREARS_USER("reports:arrears-user"),
    REPORT_ARREARS_OVERALL("reports:arrears-overall"),
    REPORT_BUSINESS("reports:business-report"),
    REPORT_PORTFOLIO_BRANCH("reports:portfolio-branch"),
    REPORT_PORTFOLIO_USER("reports:portfolio-user"),
    REPORT_PORTFOLIO_OVERALL("reports:portfolio-overall"),
    REPORT_COLLECTIONS_USER("reports:collections-user"),
    REPORT_DISBURSEMENT_SCHEDULE("reports:disbursement-schedule"),
    REPORT_AMORTIZATION_SCHEDULE("reports:amortization-schedule"),
    REPORT_EXCEPTIONS("reports:exceptions"),
    REPORT_HQ_LOAN_APPROVALS("reports:hq-loan-approval"),
    REPORT_POST_CALLBACK_APPROVALS("reports:post-callback-approval"),
    REPORT_LOANS_DUE_REPORT("reports:loans-due-report"),
    REPORT_PAYMENTS("reports:payments"),
    REPORT_POST_DISBURSEMENT_REPORT("reports:post-disbursement-report"),
    REPORT_PORTFOLIO_PER_OFFICER("reports:portfolio-per-officer"),
    REPORT_PORTFOLIO_OVERALL_REPORT("reports:portfolio-overall-report"),
    REPORT_PORTFOLIO_PER_BRANCH("reports:portfolio-per-branch"),
    REPORT_DUKA("reports:duka"),
    REPORT_PAR("reports:par"),
    REPORT_DUKA_PAR("reports:duka-par"),
    REPORT_DUKA_DUES("reports:duka-dues"),
    REPORT_PAR_PER_BRANCH("reports:par-per-branch"),
    REPORT_PAR_PER_OFFICER("reports:par-per-officer"),
    PASSWORD_RESET("password:reset");
    public final String permission;

    Permissions(String value) {
        this.permission = value;
    }

    public String getPermission() {
        return permission;
    }
}
